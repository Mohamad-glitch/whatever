from datetime import time
from typing import Optional

from sqlmodel import Field, SQLModel, Relationship


class SensorBase(SQLModel):# clint can access it
    temperature  : int = Field(index=True)
    soil_moisture : int = Field(default=0, index=True)
    
    timestamp : time = Field(index=True)



class Sensor(SensorBase, table=True): # this is the ORM model and not Accessible by the clint
    id: int | None = Field(default=None, primary_key=True)
    farm_id: int = Field(foreign_key="farm.id")
    farm: Optional["Farm"] = Relationship(back_populates="sensors")



class SensorPublic(SensorBase):# clint can access it
    id: int
    farm_id: int


class SensorCreate(SensorBase):#this for creating new farm the id will be generated by DB
    pass


class SensorUpdate(SensorBase):
    temperature : Optional[int] = None
    soil_moisture : Optional[int] = None
    timestamp : Optional[time] = None


